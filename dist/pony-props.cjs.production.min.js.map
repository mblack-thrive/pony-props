{"version":3,"file":"pony-props.cjs.production.min.js","sources":["../src/use-pony/usePony.interface.ts","../src/use-pony/utils/get-flex-order.ts","../src/use-pony/usePony.state.ts","../src/use-pony/usePony.ts"],"sourcesContent":["export enum ActionKind {\n  Next = 'Next',\n  Previous = 'Previous',\n  Reset = 'Reset',\n  UpdateOrder = 'UpdateOrder',\n}\n\nexport type State = {\n  activeSlideIndex: number;\n  slideDirection: ActionKind;\n  order: number[];\n};\n\nexport type Action = {\n  type: ActionKind;\n  payload: {\n    numItems: number;\n    activeSlideIndex?: number;\n  };\n};\n","/**\n * Gets the flex order for a slide.\n * @param index - the index of the slide\n * @param activeSlideIndex - the current/visible slide index\n * @param numItems - number of slides in carousel\n * @returns the flex order for a carousel item\n */\nexport const getOrder = ({\n  index,\n  activeSlideIndex,\n  numItems,\n}: Record<'index' | 'activeSlideIndex' | 'numItems', number>) =>\n  index - activeSlideIndex < 0\n    ? numItems - Math.abs(index - activeSlideIndex)\n    : index - activeSlideIndex;\n","import { Action, ActionKind, State } from './usePony.interface';\nimport { getOrder } from './utils/get-flex-order';\n\nexport const initialState: State = {\n  activeSlideIndex: 0,\n  slideDirection: ActionKind.Reset,\n  order: [],\n};\n\nexport const reducer = (prevState: State, action: Action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case ActionKind.Reset:\n      return initialState;\n    case ActionKind.Previous:\n      const isFirstIndex = prevState.activeSlideIndex === 0;\n      return {\n        ...prevState,\n        slideDirection: ActionKind.Previous,\n        activeSlideIndex: isFirstIndex\n          ? payload?.numItems - 1\n          : prevState.activeSlideIndex - 1,\n      };\n    case ActionKind.Next:\n      const isLastIndex = prevState.activeSlideIndex === payload.numItems - 1;\n      return {\n        ...prevState,\n        slideDirection: ActionKind.Next,\n        activeSlideIndex: isLastIndex ? 0 : prevState.activeSlideIndex + 1,\n      };\n    case ActionKind.UpdateOrder:\n      return {\n        ...prevState,\n        order: (new Array(payload?.numItems).map((_, i) => getOrder({\n          index: i,\n          activeSlideIndex: payload?.activeSlideIndex || prevState.activeSlideIndex,\n          numItems: payload?.numItems,\n        }))),\n      };\n    default:\n      return prevState;\n  }\n};\n","import {\n  CSSProperties,\n  useReducer,\n  useState,\n  AriaAttributes,\n  useEffect,\n  useRef,\n} from 'react';\nimport { ActionKind } from './usePony.interface';\nimport { initialState, reducer } from './usePony.state';\nimport { getOrder } from './utils/get-flex-order';\n\n// TODO: readme\n\nexport const usePony = ({\n  numItems,\n  initialActiveSlideIndex = initialState.activeSlideIndex,\n  isAnnouncerVisible = false,\n  reduceMotion = false,\n  transitionDuration = 500,\n  onInit,\n  onAfterChange,\n}: {\n  numItems: number;\n  initialActiveSlideIndex?: number;\n  isAnnouncerVisible?: boolean;\n  reduceMotion?: boolean;\n  transitionDuration?: number;\n  onInit?(): void;\n  onAfterChange?(activeIndex: number): void;\n}) => {\n  const [state, dispatch] = useReducer(reducer, {\n    ...initialState,\n    activeSlideIndex: initialActiveSlideIndex,\n    order: (new Array(numItems).map((_, i) => getOrder({\n      index: i,\n      activeSlideIndex: initialActiveSlideIndex,\n      numItems,\n    })))\n  });\n  const sectionRef = useRef<HTMLDivElement>(null);\n  const headingRef = useRef<HTMLHeadingElement>(null);\n  const carouselWrapperRef = useRef<HTMLDivElement>(null);\n  const carouselRef = useRef<HTMLUListElement>(null);\n  const carouselItemRef = useRef<HTMLLIElement>(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const announcerRef = useRef<HTMLDivElement>(null);\n  const TRANSITION_DURATION_MS = reduceMotion ? 0 : transitionDuration;\n\n  const [currentSwipeDirection, setCurrentSwipeDirection] = useState<\n    ActionKind.Previous | ActionKind.Next | null\n  >(null);\n\n  useEffect(() => {\n    if (onInit) {\n      onInit();\n    }\n  }, []);\n\n  console.groupCollapsed('Pony state');\n  console.log(state);\n  console.groupEnd();\n\n  useEffect(() => {\n    if (!sectionRef.current) {\n      throw new Error('please apply getSectionProps() to your <section>');\n    }\n    if (!headingRef.current) {\n      throw new Error('please apply getHeadingProps() to your <h{1,2,3}>');\n    }\n    if (!carouselWrapperRef.current) {\n      throw new Error('please apply getCarouselWrapperProps() to your <div>');\n    }\n    if (!carouselRef.current) {\n      throw new Error('please apply getCarouselProps() to your <ul>');\n    }\n    if (!carouselItemRef.current) {\n      throw new Error('please apply getCarouselItemProps() to your <li>');\n    }\n    if (!buttonRef.current) {\n      throw new Error('please apply getButtonProps() to your <button>');\n    }\n    if (!announcerRef.current) {\n      throw new Error('please apply getAnnouncerProps() to your <div>');\n    }\n  }, [\n    sectionRef,\n    headingRef,\n    carouselWrapperRef,\n    carouselRef,\n    carouselItemRef,\n    buttonRef,\n    announcerRef,\n  ]);\n\n  useEffect(() => {\n    // Listen for swipe direction changes. Apply appropriate translateX transition.\n    if (currentSwipeDirection) {\n      const transformArray = [\n        { transform: 'translateX(-100%)' },\n        { transform: 'translateX(0px)' },\n      ];\n\n      carouselRef?.current?.animate(\n        currentSwipeDirection === ActionKind.Previous\n          ? transformArray\n          : transformArray.reverse(),\n        {\n          easing: 'ease-in',\n          duration: TRANSITION_DURATION_MS,\n        }\n      );\n\n      // Automatically focus on new active carousel slide for a11y reasons.\n      setTimeout(() => {\n        dispatch({ type: ActionKind.UpdateOrder, payload: {\n          numItems,\n          activeSlideIndex: state.activeSlideIndex,\n        }});\n        onAfterChange && onAfterChange(state.activeSlideIndex);\n        // document.getElementById('carousel-item-active')?.focus();\n      }, TRANSITION_DURATION_MS);\n    }\n  }, [state.activeSlideIndex, currentSwipeDirection, numItems]);\n\n  const slide = (slideDirection: ActionKind.Previous | ActionKind.Next) => {\n    setCurrentSwipeDirection(slideDirection);\n    dispatch({ type: slideDirection, payload: { numItems } });\n  };\n\n  const getSectionProps = () => ({\n    ref: sectionRef,\n    as: 'section',\n    'aria-labelledby': 'carousel-heading',\n    // 'aria-roledescription': 'carousel',\n  });\n\n  const getHeadingProps = () => ({\n    ref: headingRef,\n    id: 'carousel-heading',\n  });\n\n  const getCarouselWrapperProps = () => ({\n    ref: carouselWrapperRef,\n    style: { width: '100%', overflow: 'hidden' },\n  });\n\n  const getCarouselProps = () => ({\n    ref: carouselRef,\n    // 'aria-label': 'Slides',\n    style: {\n      display: 'flex',\n    },\n  });\n\n  const getCarouselItemProps = (index: number) => ({\n    ref: carouselItemRef,\n    id: `carousel-item-${\n      index === state.activeSlideIndex ? 'active' : index\n    }`,\n    // 'aria-roledescription': 'slide',\n    'aria-label': `${index + 1} of ${numItems}`,\n    'aria-current': index === state.activeSlideIndex,\n    // 'aria-hidden': index !== state.activeSlideIndex,\n    style: {\n      order: state.order[index],\n      // getOrder({\n      //   index,\n      //   activeSlideIndex: state.activeSlideIndex,\n      //   numItems,\n      // }),\n      display: 'flex',\n      flex: '1 0 100%',\n      flexBasis: '100%',\n      transition: 'none',\n        // Only apply this transition when the current swipe direction is next\n        // This ensures the re-ordering of items is smoother.\n        // currentSwipeDirection === ActionKind.Next\n        //   ? `order ${TRANSITION_DURATION_MS / 1000 + 0.1}s ease-in`\n        //   : 'none',\n    },\n  });\n\n  const getButtonProps = (\n    direction: ActionKind.Previous | ActionKind.Next\n  ) => ({\n    ref: buttonRef,\n    'aria-label': direction === ActionKind.Previous ? 'Previous' : 'Next',\n    onClick: () => slide(direction),\n  });\n\n  const getAnnouncerProps = () => ({\n    ref: announcerRef,\n    'aria-live': 'polite' as AriaAttributes['aria-live'],\n    'aria-atomic': 'true' as AriaAttributes['aria-atomic'],\n    style: isAnnouncerVisible\n      ? {}\n      : ({\n          clip: 'rect(0 0 0 0)',\n          clipPath: 'inset(50%)',\n          height: '1px',\n          overflow: 'hidden',\n          position: 'absolute',\n          whiteSpace: 'nowrap',\n          width: '1px',\n        } as CSSProperties),\n  });\n\n  return {\n    // prop getters.\n    getSectionProps,\n    getHeadingProps,\n    getCarouselWrapperProps,\n    getCarouselProps,\n    getCarouselItemProps,\n    getButtonProps,\n    getAnnouncerProps,\n    // state.\n    state: {\n      ...state,\n      currentSwipeDirection,\n    },\n  };\n};\n"],"names":["ActionKind","getOrder","index","activeSlideIndex","numItems","Math","abs","initialState","slideDirection","Reset","order","reducer","prevState","action","payload","type","Previous","Next","UpdateOrder","Array","map","_","i","initialActiveSlideIndex","isAnnouncerVisible","reduceMotion","transitionDuration","onInit","onAfterChange","useReducer","state","dispatch","sectionRef","useRef","headingRef","carouselWrapperRef","carouselRef","carouselItemRef","buttonRef","announcerRef","TRANSITION_DURATION_MS","useState","currentSwipeDirection","setCurrentSwipeDirection","useEffect","console","groupCollapsed","log","groupEnd","current","Error","transformArray","transform","animate","reverse","easing","duration","setTimeout","getSectionProps","ref","as","getHeadingProps","id","getCarouselWrapperProps","style","width","overflow","getCarouselProps","display","getCarouselItemProps","flex","flexBasis","transition","getButtonProps","direction","onClick","getAnnouncerProps","clip","clipPath","height","position","whiteSpace"],"mappings":"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"}